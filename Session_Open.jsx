#target illustrator/** * USAGE: *  * 1. Place this script in Applications > Adobe Illustrator > Presets > en_US > Scripts * 2. Restart Adobe Illustrator to activate the script * 3. The script will be available under menu File > Scripts > BatchResizeArtboards * 4. ...  *//** * LICENSE & COPYRIGHT * *   You are free to use, modify, and distribute this script as you see fit.  *   No credit is required but would be greatly appreciated.  * *   Scott Lewis - scott@iconify.it *   http://github.com/iconifyit *   http://iconify.it * *   THIS SCRIPT IS OFFERED AS-IS WITHOUT ANY WARRANTY OR GUARANTEES OF ANY KIND. *   YOU USE THIS SCRIPT COMPLETELY AT YOUR OWN RISK AND UNDER NO CIRCUMSTANCES WILL  *   THE DEVELOPER AND/OR DISTRIBUTOR OF THIS SCRIPT BE HELD LIABLE FOR DAMAGES OF  *   ANY KIND INCLUDING LOSS OF DATA OR DAMAGE TO HARDWARE OR SOFTWARE. IF YOU DO  *   NOT AGREE TO THESE TERMS, DO NOT USE THIS SCRIPT. */ var originalInteractionLevel = userInteractionLevel;userInteractionLevel = UserInteractionLevel.DONTDISPLAYALERTS;/** * Constants */var CONST = {    LOGFOLDER:    "~/ai-sessions",    NO_OPEN_DOCS: "There are no open docs to save for this session",    CHOOSE_FILE:  "Choose Session File",    TXT:          ".txt"};var timestring       = (new Date()).getTime();var session_filename = "ai-sess-" + timestring + ".txt";var session_logfile  = "ai-log-"  + timestring + ".txt";var read_file = File(CONST.LOGFOLDER).openDlg(	CONST.CHOOSE_FILE, 	txt_filter, 	false);if (read_file) {	try {		if (read_file.alias) {			while (read_file.alias) {				read_file = read_file.resolve().openDlg(					CONST.CHOOSE_FILE, 					txt_filter, 					false				);			}		}	}	catch(ex) {		/* Exit gracefully */	}	try {			read_file.open('r', undefined, undefined);		if (read_file !== '') {			var _json = read_file.read();			var obj = eval(_json);			if (typeof(obj) == "object") {							if (obj.length) {					for(i=0; i<obj.length; i++) {										//alert(obj[i]);						doc = app.open(new File(obj[i]));					}				}			}			read_file.close();		}	}	catch(ex) {		try { read_file.close(); }catch(ex){};		logger(session_logfile, "ERROR: " + ex.message);	}}userInteractionLevel = originalInteractionLevel;/** *  Functions */function txt_filter(file) {	if (file.name.match(/\.txt$/)){return true;}	return false;}function logger(filename, txt) {  	var file = new File(CONST.LOGFOLDER + "/" + filename);  	file.open("e", "TEXT", "????");  	file.seek(0,2);  	$.os.search(/windows/i)  != -1 ? file.lineFeed = 'windows'  : file.lineFeed = 'macintosh';	file.writeln(txt);  	file.close();  }